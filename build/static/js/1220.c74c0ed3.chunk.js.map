{"version":3,"file":"static/js/1220.c74c0ed3.chunk.js","mappings":"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","sources":["components/questionBank/addQuestionsInfo.jsx","components/questionBank/addQuestionTab.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// import { FaRegUserCircle } from 'react-icons/fa';\n// import { IoMdAddCircleOutline } from 'react-icons/io';\n// import { RiArrowDropDownLine } from 'react-icons/ri';\nimport RichTextEditor from '../shared/RichTextEditor';\nimport { useStore } from '../../store/context-store';\nimport Dropdown from '../shared/DropDown';\nimport {\n  RHFCustomSelect,\n  RHFSelect,\n  RHFTextField,\n} from '../../hooks/hook-form';\n\nconst AddQuestionsInfo = props => {\n  const [Store, StoreDispatch] = useStore();\n  const standardOptions = [\n    { value: 'std1', label: 'Standard 1' },\n    { value: 'std2', label: 'Standard 2' },\n  ];\n  const { questionForm } = props;\n  console.log('questions', questionForm);\n  const [selectStandardOption, setSelectStandardOption] =\n    useState('Select Standard');\n\n  const subjectOptions = ['Subject 1', 'Subject ', 'Subject ', 'Subject '];\n  const [selectSubjectOption, setSelectSubjectOption] =\n    useState('Select Subject');\n\n  const chapterOptions = ['Chapter 1', 'Chapter 1', 'Chapter 1', 'Chapter 1'];\n  const [selectChapterOption, setSelectChapterOption] =\n    useState('Select Chapter');\n\n  const topicOptions = ['Topic 1', 'Topic 1', 'Topic 1', 'Topic 1'];\n  const [selectTopicOption, setSelectTopicOption] = useState('Select Topic');\n\n  const [questionBankData, setQuestionBankData] = useState(\n    {\n      title: '',\n      description: '',\n      standard: '',\n      subject: '',\n      chapter: '',\n      topic: '',\n    } || {},\n  );\n  const handleChange = e => {\n    // const { name, value } = e.target;\n    // setQuestionBankData({\n    //   ...questionBankData,\n    //   [name]: value,\n    // });\n    // if (questionBankData) {\n    //   StoreDispatch({\n    //     type: 'ADD_QUESTION_BANK',\n    //     payload: questionBankData,\n    //   });\n    // }\n  };\n  // useEffect(() => {\n  //   const { title, description, standard, subject, chapter, topic } =\n  //     questionBankData;\n  //   StoreDispatch({\n  //     type: 'ADD_QUESTION_BANK',\n  //     payload: { title, description, standard, subject, chapter, topic },\n  //   });\n  // }, []);\n  return (\n    <div className='w-full max-w-screen mx-auto text-white'>\n      <div className='p-8 rounded-md mt-6 border border-gray-700 h-[70%] w-full max-w-screen mx-auto bg-secondary__fill'>\n        <h3 className='mb-2 text-left'>Exam Title</h3>\n        <div className='flex'>\n          <RHFTextField\n            className='h-11 border text-sm bg-secondary__fill border-gray-600 rounded-md w-full max-w-screen mx-auto'\n            placeholder='Enter Exam Title'\n            name='examTitle'\n            defaultValue=''\n            control={questionForm.control}\n          />\n        </div>\n        <h3 className='mt-6 mb-2 text-left'>Description</h3>\n        <div className=' border rounded-md w-full max-w-screen mx-auto border-gray-700'>\n          <RichTextEditor />\n        </div>\n        <div className='flex w-full max-w-screen mx-auto'>\n          <div className='text-left w-full max-w-screen mx-auto 2xl:mr-8 mr-8'>\n            <h1 className='mt-6 mb-2 text-left'>Select Standard</h1>\n            <div className='h-11 border text-sm bg-secondary__fill border-gray-600 rounded-md'>\n              <RHFSelect\n                className='h-11 border text-sm bg-secondary__fill border-gray-600 rounded-md w-full max-w-screen mx-auto'\n                placeholder='Enter Exam Title'\n                name='standard'\n                defaultValue=''\n                options={standardOptions}\n              />\n              {/* <Dropdown\n                options={standardOptions}\n                selectedOption={selectStandardOption}\n                setSelectedOption={setSelectStandardOption}\n              /> */}\n            </div>\n          </div>\n          <div className='text-left w-full max-w-screen mx-auto'>\n            <h1 className='mt-6 mb-2 text-left'>Select Subject</h1>\n            <div className='h-11 border text-sm bg-secondary__fill border-gray-600 rounded-md'>\n              <Dropdown\n                options={subjectOptions}\n                selectedOption={selectStandardOption}\n                setSelectedOption={setSelectStandardOption}\n              />\n            </div>\n          </div>\n        </div>\n        <div className='flex w-full max-w-screen mx-auto'>\n          <div className='text-left w-full max-w-screen mx-auto 2xl:mr-8 mr-8'>\n            <h1 className='mt-6 mb-2 text-left'>Select Chapter</h1>\n            <div className='h-11 border text-sm bg-secondary__fill border-gray-600 rounded-md'>\n              <Dropdown\n                options={chapterOptions}\n                selectedOption={selectStandardOption}\n                setSelectedOption={setSelectStandardOption}\n              />\n            </div>\n          </div>\n          <div className='text-left w-full max-w-screen mx-auto'>\n            <h1 className='mt-6 mb-2 text-left'>Select Topic</h1>\n            <div className='h-11 border text-sm bg-secondary__fill border-gray-600 rounded-md'>\n              <Dropdown\n                options={topicOptions}\n                selectedOption={selectStandardOption}\n                setSelectedOption={setSelectStandardOption}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default AddQuestionsInfo;\n","import React, { useState } from 'react';\nimport { FaRegUserCircle } from 'react-icons/fa';\nimport { IoMdAddCircleOutline } from 'react-icons/io';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport AddQuestionsInfo from './addQuestionsInfo';\nimport BlankAddQuestions from './blankAddQuestions';\nimport { FormProvider } from '../../hooks/hook-form';\n\nconst AddQuestionTab = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const schema = yup.object().shape({\n    examTitle: yup.string().required('Exam title is required'),\n    Description: yup.string().required('Description is required'),\n    standard: yup.string().required('Standard is required'),\n    subject: yup.string().required('Subject is required'),\n    chapter: yup.string().required('Chapter is required'),\n    topic: yup.string().required('Topic is required'),\n  });\n  const questionForm = useForm({ resolver: yupResolver(schema) });\n  const {\n    handleSubmit,\n    getValues,\n    formState: { errors },\n    reset,\n  } = questionForm;\n  const tabs = [\n    {\n      title: 'Basic Info',\n      icon: <FaRegUserCircle />,\n      component: <AddQuestionsInfo questionForm={questionForm} />,\n    },\n    {\n      title: 'Add Questions',\n      icon: <IoMdAddCircleOutline />,\n      component: <BlankAddQuestions />,\n    },\n  ];\n  const handleTabClick = index => {\n    setActiveTab(index);\n  };\n  const handlePreviousTab = () => {\n    setActiveTab(prevTab => (prevTab > 0 ? prevTab - 1 : 0));\n  };\n  const handleNextTab = () => {\n    setActiveTab(prevTab =>\n      prevTab < tabs.length - 1 ? prevTab + 1 : prevTab,\n    );\n  };\n\n  const onSubmit = () => {\n    console.log('handleSubmit');\n  };\n\n  console.log('error', errors);\n  console.log('getValues', getValues);\n\n  return (\n    <div className=''>\n      <FormProvider methods={questionForm} onSubmit={handleSubmit(onSubmit)}>\n        <div className='tabs'>\n          <div className='flex'>\n            {tabs.map((tab, index) => (\n              <button\n                key={index}\n                onClick={() => handleTabClick(index)}\n                className={`${\n                  index === activeTab\n                    ? 'border-primary text-white'\n                    : 'border-transparent text-white hover:text-white hover:border-white'\n                } relative inline-flex items-center px-4 py-2 border-b-2 font-medium text-sm focus:outline-none`}\n              >\n                <div className={`flex items-center`}>\n                  <span\n                    className={`mt-1 mr-2 ${index === activeTab ? 'text-primary' : 'text-white'} `}\n                  >\n                    {tab.icon}\n                  </span>\n                  <h1\n                    className={`${index === activeTab ? 'text-primary' : 'text-white'} `}\n                  >\n                    {tab.title}\n                  </h1>\n                </div>\n              </button>\n            ))}\n          </div>\n          <div className='mt-4 w-[100%]'>{tabs[activeTab].component}</div>\n          <div className='flex 2xl:w-[100%] mt-8 lg:w-[100%] justify-between'>\n            <button\n              className='rounded-md bg-white w-24 h-8 text-black hover:bg-primary hover:text-white'\n              onClick={handlePreviousTab}\n              disabled={activeTab === 0}\n            >\n              Previous\n            </button>\n            <button\n              className='rounded-md bg-white w-24 h-8 text-black ml-auto hover:bg-primary hover:text-white'\n              // onClick={handleNextTab}\n              disabled={activeTab === tabs.length - 1}\n              type='submit'\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </FormProvider>\n    </div>\n  );\n};\nexport default AddQuestionTab;\n"],"names":["props","Store","StoreDispatch","useStore","questionForm","console","log","selectStandardOption","setSelectStandardOption","useState","selectSubjectOption","setSelectSubjectOption","selectChapterOption","setSelectChapterOption","selectTopicOption","setSelectTopicOption","questionBankData","setQuestionBankData","title","description","standard","subject","chapter","topic","_jsx","className","children","_jsxs","RHFTextField","placeholder","name","defaultValue","control","RichTextEditor","RHFSelect","options","value","label","Dropdown","selectedOption","setSelectedOption","AddQuestionTab","activeTab","setActiveTab","schema","yup","shape","examTitle","required","Description","useForm","resolver","yupResolver","handleSubmit","getValues","formState","errors","reset","tabs","icon","FaRegUserCircle","component","AddQuestionsInfo","IoMdAddCircleOutline","BlankAddQuestions","FormProvider","methods","onSubmit","map","tab","index","onClick","handleTabClick","concat","handlePreviousTab","prevTab","disabled","length","type"],"sourceRoot":""}