{"version":3,"file":"static/js/2593.05a5d15c.chunk.js","mappings":"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","sources":["constants/api.jsx","components/Notification/hooks/useNotification.js","components/ui/Dialog/Notification/editDialog.jsx","components/Notification/components/NotificationCard/index.jsx","components/Notification/components/Header/searchHeader.jsx","components/Notification/index.jsx","pages/NotificationPage/index.jsx","utilities/axios-client.jsx"],"sourcesContent":["const URLS = {\n  HOST_URL: 'https://superadmin.mandreducation.in',\n  SUFFIX_URL: '/api/v1',\n  LOGIN: `/login`,\n  LOG_OUT: `/logout`,\n  GET_PROFILE: '/profile',\n  UPDATE_PROFILE: '/profile/update',\n  CHANGE_PASSWORD: '/change-password',\n  FORGOT_PASSWORD: '/password/email',\n  RESET_PASSWORD: token => `/password/reset?token=${token}`,\n  DASHBOARD: () => `/dashboard`,\n  ADD_PLAN: () => `/plans`,\n  GET_PLAN: () => `/plans`,\n  EDIT_PLAN: id => `/plans/${id}`,\n  UPDATE_PLAN: id => `/plans/${id}`,\n  DELETE_PLAN: id => `/plans/${id}`,\n  ADD_ADMIN: () => `/admins`,\n  GET_ADMINS: () => `/admins`,\n  EDIT_ADMIN: id => `/admins/${id}`,\n  UPDATE_ADMIN: id => `/admins/${id}`,\n  DELETE_ADMIN: id => `/admins/${id}`,\n  ADD_FEATURE: () => `/features`,\n  GET_FEATURES: () => `/features`,\n  EDIT_FEATURE: id => `/features/${id}`,\n  UPDATE_FEATURE: id => `/features/${id}`,\n  DELETE_FEATURE: id => `/features/${id}`,\n  ADD_QUESTION_BANK: () => `/questionbanks`,\n  GET_QUESTION_BANK: () => `/questionbanks`,\n  EDIT_QUESTION_BANK: id => `/questionbanks/${id}`,\n  UPDATE_QUESTION_BANK: id => `/questionbanks/${id}`,\n  DELETE_QUESTION_BANK: id => `/questionbanks/${id}`,\n  ADD_COURSE: () => `/courses`,\n  GET_COURSE: () => `/courses`,\n  EDIT_COURSE: id => `/courses/${id}`,\n  UPDATE_COURSE: id => `/courses/${id}`,\n  DELETE_COURSE: id => `/courses/${id}`,\n  ADD_SUBJECT: () => `/subjects`,\n  GET_SUBJECT: () => `/subjects`,\n  EDIT_SUBJECT: id => `/subjects/${id}`,\n  UPDATE_SUBJECT: id => `/subjects/${id}`,\n  DELETE_SUBJECT: id => `/subjects/${id}`,\n  ADD_CHAPTER: () => `/chapters`,\n  GET_CHAPTER: () => `/chapters`,\n  EDIT_CHAPTER: id => `/chapters/${id}`,\n  UPDATE_CHAPTER: id => `/chapters/${id}`,\n  DELETE_CHAPTER: id => `/chapters/${id}`,\n  ADD_LANGUAGES: () => `/languages`,\n  GET_LANGUAGES: () => `/languages`,\n  EDIT_LANGUAGES: id => `/languages/${id}`,\n  UPDATE_LANGUAGES: id => `/languages/${id}`,\n  DELETE_LANGUAGES: id => `/languages/${id}`,\n  ADD_ACADEMIC_YEAR: () => `/academic-years`,\n  GET_ACADEMIC_YEAR: () => `/academic-years`,\n  EDIT_ACADEMIC_YEAR: id => `/academic-years/${id}`,\n  UPDATE_ACADEMIC_YEAR: id => `/academic-years/${id}`,\n  DELETE_ACADEMIC_YEAR: id => `/academic-years/${id}`,\n  GET_NOTIFICATIION: userType => `/notifications?user_type=${userType}`,\n  ADD_NOTIFICATION: () => `/notifications`,\n  EDIT_NOTIFICATION: id => `/notifications/${id}`,\n  DELETE_NOTIFICATION: id => `/notifications/${id}`,\n};\nexport default URLS;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { APIClient } from '../../../utilities/axios-client';\nimport URLS from '../../../constants/api';\n\nconst ITEMS_PER_PAGE = 4;\n\nconst useNotification = () => {\n  const { API } = APIClient();\n\n  const navigate = useNavigate();\n\n  const [notificationList, setNotificationList] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const DeleteNotification = useCallback(async id => {\n    try {\n      const response = await API(\n        'DELETE',\n        URLS.DELETE_NOTIFICATION(id),\n\n        true,\n      );\n      navigate('/notifications');\n    } catch (err) {\n      console.error('Error while adding notification', err);\n    }\n  }, []);\n\n  const UpdateNotification = useCallback(async (id, notification) => {\n    try {\n      const data = { ...notification };\n      const response = await API(\n        'POST',\n        URLS.EDIT_NOTIFICATION(id),\n        data,\n        true,\n      );\n      navigate('/notifications');\n    } catch (err) {\n      console.error('Error while adding notification', err);\n    }\n  }, []);\n\n  const handleUpdateNotification = (id, notification) => {\n    UpdateNotification(id, notification);\n  };\n\n  // Fetch initial data\n  const fetchNotificationList = async () => {\n    // Simulated data fetching\n    // const record = Array.from({ length: 50 }, (_, index) => ({\n    //   title: `Admin ${index}`,\n    //   id: index + 1,\n    // }));\n    // setNotificationList(record);\n\n    try {\n      const userType = 'Admin';\n      const response = await API(\n        'GET',\n        URLS.GET_NOTIFICATIION(userType),\n        {},\n        true,\n      );\n      if (response.status !== 200) {\n        throw response;\n      }\n      console.log('response', response);\n      setNotificationList(response.data?.data);\n    } catch (err) {\n      console.log('error while fetching questions', err);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      fetchNotificationList();\n    } catch (error) {\n      console.log('error while fetching notifications', error);\n    }\n  }, []);\n\n  // Calculate filtered items based on search term\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredData([]);\n      setCurrentPage(1); // Reset page number when clearing search\n      return;\n    }\n\n    const filteredItems = notificationList.filter(notification =>\n      notification?.title?.toLowerCase().includes(searchTerm?.toLowerCase()),\n    );\n\n    setFilteredData(filteredItems);\n    setCurrentPage(1); // Reset page number when performing a search\n  }, [searchTerm, notificationList]);\n\n  // Determine current items based on search results or pagination\n  const lastCardIndex = currentPage * ITEMS_PER_PAGE;\n  const firstCardIndex = lastCardIndex - ITEMS_PER_PAGE;\n  const currentItems = searchTerm\n    ? filteredData.slice(firstCardIndex, lastCardIndex)\n    : notificationList.slice(firstCardIndex, lastCardIndex);\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const openEditDialog = () => setIsEditOpen(true);\n  const closeEditDialog = () => setIsEditOpen(false);\n  const confirmDeleteHandler = () => setOpenDelete(false);\n  const handleCloseDelete = () => setOpenDelete(false);\n  const openDeleteDialog = () => setOpenDelete(true);\n  const handleAddNotification = () => navigate('/addNotification');\n\n  return {\n    data: currentItems,\n    isEditOpen,\n    openDelete,\n    searchTerm,\n    totalShowItems: notificationList?.length,\n    currentPage,\n    ITEMS_PER_PAGE,\n    setCurrentPage,\n    handleSearchChange,\n    openEditDialog,\n    closeEditDialog,\n    confirmDeleteHandler,\n    handleCloseDelete,\n    openDeleteDialog,\n    handleAddNotification,\n    handleUpdateNotification,\n  };\n};\n\nexport default useNotification;\n","import React, { useState, useEffect } from 'react';\nimport { Icon } from '@iconify/react';\nimport AnnouncementImage from '../../../../assets/announcement_card.png';\nimport RichTextEditor from '../../../shared/RichTextEditor';\n\nconst EditDialogCard = ({\n  id,\n  initialTitle,\n  initialDescription,\n  heading,\n  isOpen,\n  onClose,\n  handleUpdateNotification,\n}) => {\n  const [title, setTitle] = useState(initialTitle);\n  const [description, setDescription] = useState(initialDescription);\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  useEffect(() => {\n    setTitle(initialTitle);\n    setDescription(initialDescription);\n    setSelectedFile(null);\n  }, [initialTitle, initialDescription]);\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const fileName = `${Date.now()}-${file.name}`;\n      const imageUrl = `https://mr-education-app.s3.ap-south-1.amazonaws.com/uploads/notification/${fileName}`;\n\n      const fileData = {\n        url: imageUrl,\n        mime_type: file.type,\n        name: file.name,\n        size: file.size,\n      };\n\n      setSelectedFile(fileData);\n    }\n  };\n\n  const handleUpdateClick = () => {\n    const updatedNotification = {\n      title,\n      description,\n      image: selectedFile,\n    };\n\n    handleUpdateNotification(id, updatedNotification);\n  };\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return (\n    <div className='fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-20 text-start'>\n      <div className='flex flex-col px-8 py-7 rounded-3xl border border-gray-700 border-solid text-start bg-secondary__fill w-42.6 max-md:px-5'>\n        <div className='flex gap-5 text-xl text-white max-md:flex-wrap max-md:max-w-full'>\n          <div className='flex-auto my-auto'>{heading}</div>\n          <Icon\n            icon={'material-symbols-light:close'}\n            className='text-white cursor-pointer'\n            onClick={onClose}\n          />\n        </div>\n        <div className='shrink-0 items-center h-px border border-solid bg-slate-500 border-slate-500 max-md:max-w-full' />\n\n        {/* Image Section */}\n        <div className='flex overflow-hidden relative rounded flex-col justify-center items-center px-20 pt-11 pb-20 mt-11 text-base text-center text-white whitespace-nowrap min-h-[158px] max-md:px-5 max-md:mt-10 max-md:max-w-full'>\n          <div className='absolute inset-0 flex items-center justify-center'>\n            {selectedFile ? (\n              <img\n                loading='lazy'\n                src={selectedFile.url}\n                className='object-cover w-full h-full opacity-50'\n                alt='Selected Image'\n              />\n            ) : (\n              <img\n                loading='lazy'\n                src={AnnouncementImage}\n                className='object-cover w-full h-full opacity-50'\n                alt='Default Image'\n              />\n            )}\n          </div>\n          <div className='relative z-10 flex flex-col items-center justify-center'>\n            <label htmlFor='fileInput' className='cursor-pointer'>\n              <Icon\n                icon={'uil:image-upload'}\n                className='text-white text-xl mb-1'\n              />\n              <input\n                id='fileInput'\n                type='file'\n                hidden\n                onChange={handleFileChange}\n              />\n            </label>\n            <span\n              className='text-white text-lg cursor-pointer'\n              onClick={() => document.getElementById('fileInput').click()}\n            >\n              Change\n            </span>\n          </div>\n        </div>\n\n        {/* Title Input */}\n        <div className='mt-5 flex flex-col text-sm max-w-[613px]'>\n          <div className='w-full text-white max-md:max-w-full'>Title</div>\n          <input\n            type='text'\n            placeholder='Enter Title'\n            className='justify-center px-3 py-3 mt-2 rounded border border-gray-700 border-solid leading-[143%] text-ellipsis text-stone-300 bg-secondary__fill max-md:max-w-full'\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </div>\n\n        {/* Description Section */}\n        <div className='mt-5 text-sm text-white max-md:max-w-full'>\n          Description\n        </div>\n        <div className='mt-2'>\n          <RichTextEditor value={description} onChange={setDescription} />\n        </div>\n\n        {/* Update Button */}\n        <button\n          className='justify-center self-center px-7 py-3 mt-8 text-base text-center whitespace-nowrap bg-white rounded-lg text-slate-900 max-md:px-5'\n          onClick={handleUpdateClick}\n        >\n          Update\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EditDialogCard;\n","import React from 'react';\nimport { Icon } from '@iconify/react/dist/iconify';\nimport moment from 'moment';\n\nimport ConfirmDelete from '../../../ui/Dialog/ConfirmDelete';\nimport EditDialogCard from '../../../ui/Dialog/Notification/editDialog';\n\nfunction Image({ src, alt }) {\n  return (\n    <img loading='lazy' src={src} alt={alt} className='w-[37px] h-[37px]' />\n  );\n}\n\nfunction InfoItem({ label, value }) {\n  return (\n    <div className='mt-1.5 text-xs text-orange__primary capitalize'>\n      {label} : {value}\n    </div>\n  );\n}\n\nfunction Description({ children }) {\n  return (\n    <div className='mt-6 text-xs leading-4 text-gray-400 max-md:max-w-full text-left'>\n      {children}\n    </div>\n  );\n}\n\nfunction NotificationCard({\n  id,\n  title,\n  description,\n  createdAt,\n  isEditOpen,\n  openDelete,\n  openEditDialog,\n  closeEditDialog,\n  confirmDeleteHandler,\n  handleCloseDelete,\n  openDeleteDialog,\n  handleUpdateNotification,\n}) {\n  const dateTime = moment(createdAt);\n  const formattedDateTime = dateTime.format('YYYY-MM-DD');\n  const timeWithAMPM = dateTime.format('hh:mm:ss A');\n\n  return (\n    <section className='flex flex-col p-8 rounded-lg border border-gray-700 border-solid bg-secondary__fill  max-md:px-5'>\n      <header className='flex gap-3 justify-between w-full max-md:flex-wrap max-md:max-w-full'>\n        <div className='flex gap-3 justify-center'>\n          <Image\n            src='https://cdn.builder.io/api/v1/image/assets/TEMP/075c13b2da664ca5633519aac1c19411aa4d8cff7b28bc5cae6ebdbb9f417557?apiKey=33d350ef18e9405bbdd3cdc1375c0c2b&'\n            alt='Exam schedule icon'\n          />\n          <div className='flex flex-col'>\n            <h1 className='text-base text-white flex'>{title}</h1>\n            <div className='flex'>\n              <InfoItem label='Date' value={formattedDateTime} />\n              &nbsp;\n              <InfoItem label='Time' value={timeWithAMPM} />\n            </div>\n          </div>\n        </div>\n        <div className='flex flex-1 justify-end gap-2.5 ml-auto'>\n          <Icon\n            icon={'lucide:edit'}\n            className='text-white'\n            onClick={openEditDialog}\n          />\n          <Icon\n            icon={'material-symbols:delete'}\n            color='red'\n            onClick={openDeleteDialog}\n            className='cursor-pointer'\n          />\n        </div>\n      </header>\n      <Description>\n        Description :<br />\n        <br />\n        {description}\n      </Description>\n      <ConfirmDelete\n        fullMessage='Are you sure you want to Delete Chapter?'\n        title='Delete Chapter'\n        handleClose={handleCloseDelete}\n        open={openDelete}\n        deleteHandler={confirmDeleteHandler}\n      />\n      <EditDialogCard\n        id={id}\n        initialTitle={title}\n        initialDescription={description}\n        isOpen={isEditOpen}\n        onClose={closeEditDialog}\n        heading='Edit Notifications'\n        handleUpdateNotification={handleUpdateNotification}\n      />\n    </section>\n  );\n}\n\nexport default NotificationCard;\n","import React from 'react';\n\nimport { Icon } from '@iconify/react';\n\nconst NotificationSearch = ({ value, onChange, handleAddNotification }) => {\n  return (\n    <div className='flex gap-5 justify-between p-8 rounded-xl border border-gray-700 border-solid bg-secondary__fill max-md:flex-wrap max-md:px-5'>\n      <input\n        type='text'\n        placeholder='Search Name, Enrollment, Standard'\n        className='w-80 justify-center items-start self-start px-3 py-3 text-sm leading-5 rounded border border-solid bg-secondary__fill__dark border-gray-700 border-opacity-20 text-white max-md:pr-5'\n        value={value}\n        onChange={onChange}\n      />\n\n      <button\n        className='flex items-center gap-2.5 px-4 py-2.5 text-base text-center bg-white rounded-lg text-secondary__fill'\n        onClick={handleAddNotification}\n      >\n        <Icon icon='fluent:add-circle-20-regular' />\n        <span className='my-auto'>Add Notification</span>\n      </button>\n    </div>\n  );\n};\n\nexport default NotificationSearch;\n","import React from 'react';\nimport useNotification from './hooks/useNotification';\nimport NotificationCard from './components/NotificationCard';\nimport NotificationSearch from './components/Header/searchHeader';\nimport Pagination from '../shared/Pagination';\n\nconst NotificationView = () => {\n  const {\n    data,\n    isEditOpen,\n    openDelete,\n    searchTerm,\n    totalShowItems,\n    totalPages,\n    currentPage,\n    ITEMS_PER_PAGE,\n    setCurrentPage,\n    handleSearchChange,\n    openEditDialog,\n    closeEditDialog,\n    confirmDeleteHandler,\n    handleCloseDelete,\n    openDeleteDialog,\n    handleAddNotification,\n    handleUpdateNotification,\n  } = useNotification();\n  console.log('🚀 ~ NotificationView ~ data:', data);\n\n  return (\n    <div\n      className='w-full'\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'hidden',\n        padding: 2,\n      }}\n    >\n      <div className='w-max mb-6'>\n        <h2 className=\"text-white text-[32px] font-normal font-['Helvetica'] text-left\">\n          Notification\n        </h2>\n      </div>\n      <NotificationSearch\n        value={searchTerm}\n        onChange={handleSearchChange}\n        handleAddNotification={handleAddNotification}\n      />\n      <div className='flex-1 mt-4'>\n        {data.length > 0 ? (\n          <div className='grid lg:grid-cols-2 gap-6 sm:grid-cols-1 md:grid-cols-2 xs:grid-cols-1 w-full'>\n            {data[0] &&\n              data[0].map((notification, index) => (\n                <NotificationCard\n                  key={index}\n                  id={notification.id}\n                  title={notification.title}\n                  description={notification.description}\n                  image={notification.image.url}\n                  createdAt={notification.created_at}\n                  isEditOpen={isEditOpen}\n                  openDelete={openDelete}\n                  openEditDialog={openEditDialog}\n                  closeEditDialog={closeEditDialog}\n                  confirmDeleteHandler={confirmDeleteHandler}\n                  handleCloseDelete={handleCloseDelete}\n                  openDeleteDialog={openDeleteDialog}\n                  handleUpdateNotification={handleUpdateNotification}\n                />\n              ))}\n          </div>\n        ) : (\n          <p className='text-white'>No records found.</p>\n        )}\n      </div>\n      {totalShowItems > ITEMS_PER_PAGE && (\n        <Pagination\n          totalCards={searchTerm ? data.length : totalShowItems}\n          cardsPerPage={ITEMS_PER_PAGE}\n          currentPage={currentPage}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NotificationView;\n","import React from 'react';\nimport NotificationView from '../../components/Notification';\n\nconst Notification = () => {\n  return (\n    <>\n      <NotificationView />\n    </>\n  );\n};\n\nexport default Notification;\n","/* eslint-disable no-case-declarations */\n/* eslint-disable func-names */\n/* eslint-disable no-underscore-dangle */\nimport React, { useMemo } from 'react';\nimport axios from 'axios';\n// import { PROD_HOST_URL, DEV_HOST_URL, TEST_HOST_URL } from '../constants/api';\nimport { useLocation } from 'react-router-dom';\nimport urls from '../constants/api';\nimport { useStore } from '../store/context-store';\n\nconst axiosInstance = axios.create({\n  baseURL: urls.HOST_URL + urls.SUFFIX_URL,\n});\n\nexport const APIClient2 = () => {\n  const [Store, StoreDispatch] = useStore();\n\n  axiosInstance.interceptors.request.use(\n    async config => {\n      if (!navigator.onLine) {\n        const error = new Error('No internet connection');\n        error.name = 'NetworkError';\n        return Promise.reject(error);\n      }\n      const token =\n        JSON.parse(window.localStorage.getItem('last_state'))?.user?.token ||\n        '';\n      const newConfig = { ...config };\n      if (token) {\n        newConfig.headers = {\n          ...newConfig.headers,\n          Authorization: `Bearer ${token}`,\n          Accept: 'application/json',\n          'Content-Type': 'multipart/form-data',\n        };\n      }\n      return newConfig;\n    },\n    error => {\n      if (error?.response?.status === 401) {\n        StoreDispatch({ type: 'RemoveState' });\n      }\n      return Promise.reject(error);\n    },\n  );\n  axiosInstance.interceptors.response.use(\n    response => response,\n    async error => {\n      const originalRequest = error.config;\n      // if ( [401, 403].includes(error.response.status) && !originalRequest._retry) {\n      //   originalRequest._retry = true;\n\n      //   try {\n      //     const refreshToken = getRefreshToken(usertype);\n      //     const response = await axios.post(\n      //       `${API_END_POINT}/auth/refresh-token`,\n      //       {\n      //         refresh_token: refreshToken,\n      //       },\n      //     );\n      //     const { tokens } = response.data;\n      //     setTokensInStorage(\n      //       usertype,\n      //       tokens.access_token,\n      //       tokens.refresh_token,\n      //     );\n      //     originalRequest.headers.Authorization = `Bearer ${tokens.access_token}`;\n      //     return axios(originalRequest);\n      //   } catch (error) {\n      //     sessionStorage.clear();\n      //     localStorage.clear();\n      //     window.location.href = '/login';\n      //   }\n      // }\n\n      return Promise.reject(error);\n    },\n  );\n  return { axiosInstance };\n};\nexport const APIClient = () => {\n  const [Store, StoreDispatch] = useStore();\n\n  // Function to get bearer token\n  const getToken = () => {\n    return Store?.user?.token || '';\n  };\n  const getrefreshToken = () => {\n    return Store?.user?.refreshToken || '';\n  };\n  const getNewAccessToken = async refreshToken => {\n    try {\n      const response = await axios.post(urls.REFRESH_TOKEN, { refreshToken });\n      return response.data.token;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  const API = async (\n    method,\n    url,\n    data = null,\n    withAuth = true,\n    responseType = {},\n    token = '',\n    setLoading = () => {},\n  ) => {\n    let config = {};\n    if (withAuth) {\n      config = {\n        headers: {\n          Authorization: `Bearer ${token || Store?.user?.token}`,\n        },\n        ...responseType,\n      };\n    }\n    switch (method) {\n      case 'GET':\n        setLoading(true);\n        const getResponse = axiosInstance\n          .get(url, config)\n          .then(response => {\n            setLoading(false);\n            return response;\n          })\n          .catch(err => {\n            setLoading(false);\n            return err;\n          });\n        return getResponse;\n      case 'POST':\n        setLoading(true);\n        const postResponse = axiosInstance\n          .post(url, data, config)\n          .then(response => {\n            setLoading(false);\n            return response;\n          })\n          .catch(err => {\n            setLoading(false);\n            return err;\n          });\n        return postResponse;\n      case 'PUT':\n        const putResponse = axiosInstance\n          .put(url, data, config)\n          .then(response => {\n            setLoading(false);\n            return response;\n          })\n          .catch(err => {\n            setLoading(false);\n            return err;\n          });\n        return putResponse;\n      case 'PATCH':\n        const patchResponse = axiosInstance\n          .patch(url, data, config)\n          .then(response => {\n            setLoading(false);\n            return response;\n          })\n          .catch(err => {\n            setLoading(false);\n            return err;\n          });\n        return patchResponse;\n      case 'DELETE':\n        const deleteResponse = axiosInstance\n          .delete(url, config)\n          .then(response => {\n            setLoading(false);\n            return response;\n          })\n          .catch(err => {\n            setLoading(false);\n            return err;\n          });\n        return deleteResponse;\n      default:\n        const defaultResponse = axiosInstance\n          .get(url, config)\n          .then(response => {\n            setLoading(false);\n            return response;\n          })\n          .catch(err => {\n            setLoading(false);\n            return err;\n          });\n        return defaultResponse;\n    }\n  };\n\n  return { API };\n};\nexport const useQueryParams = () => {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n};\nexport default axiosInstance;\n"],"names":["HOST_URL","SUFFIX_URL","LOGIN","LOG_OUT","GET_PROFILE","UPDATE_PROFILE","CHANGE_PASSWORD","FORGOT_PASSWORD","RESET_PASSWORD","token","concat","DASHBOARD","ADD_PLAN","GET_PLAN","EDIT_PLAN","id","UPDATE_PLAN","DELETE_PLAN","ADD_ADMIN","GET_ADMINS","EDIT_ADMIN","UPDATE_ADMIN","DELETE_ADMIN","ADD_FEATURE","GET_FEATURES","EDIT_FEATURE","UPDATE_FEATURE","DELETE_FEATURE","ADD_QUESTION_BANK","GET_QUESTION_BANK","EDIT_QUESTION_BANK","UPDATE_QUESTION_BANK","DELETE_QUESTION_BANK","ADD_COURSE","GET_COURSE","EDIT_COURSE","UPDATE_COURSE","DELETE_COURSE","ADD_SUBJECT","GET_SUBJECT","EDIT_SUBJECT","UPDATE_SUBJECT","DELETE_SUBJECT","ADD_CHAPTER","GET_CHAPTER","EDIT_CHAPTER","UPDATE_CHAPTER","DELETE_CHAPTER","ADD_LANGUAGES","GET_LANGUAGES","EDIT_LANGUAGES","UPDATE_LANGUAGES","DELETE_LANGUAGES","ADD_ACADEMIC_YEAR","GET_ACADEMIC_YEAR","EDIT_ACADEMIC_YEAR","UPDATE_ACADEMIC_YEAR","DELETE_ACADEMIC_YEAR","GET_NOTIFICATIION","userType","ADD_NOTIFICATION","EDIT_NOTIFICATION","DELETE_NOTIFICATION","useNotification","API","APIClient","navigate","useNavigate","notificationList","setNotificationList","useState","filteredData","setFilteredData","isEditOpen","setIsEditOpen","openDelete","setOpenDelete","currentPage","setCurrentPage","searchTerm","setSearchTerm","UpdateNotification","useCallback","async","URLS","err","console","error","notification","data","useEffect","_response$data","response","status","log","fetchNotificationList","trim","filteredItems","filter","_notification$title","title","toLowerCase","includes","lastCardIndex","firstCardIndex","slice","totalShowItems","length","ITEMS_PER_PAGE","handleSearchChange","event","target","value","openEditDialog","closeEditDialog","confirmDeleteHandler","handleCloseDelete","openDeleteDialog","handleAddNotification","handleUpdateNotification","_ref","initialTitle","initialDescription","heading","isOpen","onClose","setTitle","description","setDescription","selectedFile","setSelectedFile","_jsx","className","children","_jsxs","Icon","icon","onClick","loading","src","url","alt","AnnouncementImage","htmlFor","type","hidden","onChange","file","files","fileName","Date","now","name","fileData","mime_type","size","document","getElementById","click","placeholder","e","RichTextEditor","handleUpdateClick","image","Image","InfoItem","_ref2","label","Description","_ref3","_ref4","createdAt","dateTime","moment","formattedDateTime","format","timeWithAMPM","color","ConfirmDelete","fullMessage","handleClose","open","deleteHandler","EditDialogCard","NotificationView","totalPages","style","display","flexDirection","overflowY","padding","NotificationSearch","map","index","NotificationCard","created_at","Pagination","totalCards","cardsPerPage","Notification","_Fragment","axiosInstance","axios","create","baseURL","urls","APIClient2","Store","StoreDispatch","useStore","interceptors","request","use","_JSON$parse","_JSON$parse$user","navigator","onLine","Error","Promise","reject","JSON","parse","window","localStorage","getItem","user","newConfig","config","headers","Authorization","Accept","_error$response","method","arguments","undefined","responseType","setLoading","_Store$user3","get","then","catch","post","put","patch","delete"],"sourceRoot":""}