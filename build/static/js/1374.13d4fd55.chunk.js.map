{"version":3,"file":"static/js/1374.13d4fd55.chunk.js","mappings":"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","sources":["components/EventManegement/Calendar/EventModal.jsx","components/EventManegement/Calendar/MyCalendar.jsx","components/EventManegement/index.jsx"],"sourcesContent":["// src/EventModal.js\nimport React from 'react';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\nconst EventModal = ({\n  isOpen,\n  onRequestClose,\n  event,\n  handleEventInput,\n  addNewEvent,\n}) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      contentLabel='Add Event'\n      className='ReactModal__Content'\n      overlayClassName='ReactModal__Overlay'\n    >\n      <h2 className='text-2xl mb-4 text-white'>Add / Edit Event</h2>\n      <form className='space-y-4'>\n        <div>\n          <label className='block text-sm font-medium text-white'>\n            Event Title\n          </label>\n          <input\n            type='text'\n            name='title'\n            value={event.title}\n            onChange={handleEventInput}\n            className='mt-1 p-2 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md bg-gray-800 text-white'\n          />\n        </div>\n        <div className='flex space-x-4'>\n          <label className='inline-flex items-center'>\n            <input\n              type='radio'\n              name='color'\n              value='success'\n              checked={event.color === 'success'}\n              onChange={handleEventInput}\n              className='form-radio text-success'\n            />\n            <span className='ml-2 text-white'>Success</span>\n          </label>\n          <label className='inline-flex items-center'>\n            <input\n              type='radio'\n              name='color'\n              value='danger'\n              checked={event.color === 'danger'}\n              onChange={handleEventInput}\n              className='form-radio text-danger'\n            />\n            <span className='ml-2 text-white'>Danger</span>\n          </label>\n          <label className='inline-flex items-center'>\n            <input\n              type='radio'\n              name='color'\n              value='primary'\n              checked={event.color === 'primary'}\n              onChange={handleEventInput}\n              className='form-radio text-primary'\n            />\n            <span className='ml-2 text-white'>Primary</span>\n          </label>\n          <label className='inline-flex items-center'>\n            <input\n              type='radio'\n              name='color'\n              value='warning'\n              checked={event.color === 'warning'}\n              onChange={handleEventInput}\n              className='form-radio text-warning'\n            />\n            <span className='ml-2 text-white'>Warning</span>\n          </label>\n        </div>\n        <div>\n          <label className='block text-sm font-medium text-white'>\n            Enter Start Date\n          </label>\n          <input\n            type='datetime-local'\n            name='start'\n            value={event.start}\n            onChange={handleEventInput}\n            className='mt-1 p-2 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md bg-gray-800 text-white'\n          />\n        </div>\n        <div>\n          <label className='block text-sm font-medium text-white'>\n            Enter End Date\n          </label>\n          <input\n            type='datetime-local'\n            name='end'\n            value={event.end}\n            onChange={handleEventInput}\n            className='mt-1 p-2 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md bg-gray-800 text-white'\n          />\n        </div>\n        <div className='flex justify-end space-x-4'>\n          <button\n            type='button'\n            onClick={onRequestClose}\n            className='bg-gray-700 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded'\n          >\n            Close\n          </button>\n          <button\n            type='button'\n            onClick={addNewEvent}\n            className='bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded'\n          >\n            Add Event\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\nexport default EventModal;\n","import React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport EventModal from './EventModal';\nimport './MyCalendar.css';\n\nconst MyCalendar = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    start: '',\n    end: '',\n    color: 'success',\n  });\n  const [events, setEvents] = useState([\n    {\n      title: 'Event Conference',\n      start: '2024-03-01',\n      end: '2024-03-02',\n      backgroundColor: '#FF6692',\n      textColor: '#0B1739',\n    },\n    {\n      title: 'Seminar #4',\n      start: '2024-03-05',\n      end: '2024-03-07',\n      backgroundColor: '#36C76C',\n      textColor: '#FFFFFF',\n    },\n    {\n      title: 'Meeting #5',\n      start: '2024-03-08T16:00:00',\n      backgroundColor: '#FFD648',\n      textColor: '#0A2540',\n    },\n    {\n      title: 'Seminar #6',\n      start: '2024-03-10',\n      backgroundColor: '#343B4F',\n      textColor: '#FFFFFF',\n    },\n    {\n      title: 'Meeting 3',\n      start: '2024-03-11T10:30:00',\n      backgroundColor: '#3D33FF',\n      textColor: '#EFF4FA',\n    },\n    {\n      title: 'Meetup',\n      start: '2024-03-11T12:00:00',\n      backgroundColor: '#FF6692',\n      textColor: '#081028',\n    },\n    {\n      title: 'Submission',\n      start: '2024-03-11T14:30:00',\n      backgroundColor: '#FFD648',\n      textColor: '#0B1739',\n    },\n    {\n      title: 'Attend event',\n      start: '2024-03-12T07:00:00',\n      backgroundColor: '#36C76C',\n      textColor: '#FFFFFF',\n    },\n    {\n      title: 'Submission #1',\n      start: '2024-03-15T16:00:00',\n      backgroundColor: '#F49B36',\n      textColor: '#0A2540',\n    },\n    {\n      title: 'Project Submission',\n      start: '2024-03-27',\n      backgroundColor: '#3D33FF',\n      textColor: '#EFF4FA',\n    },\n  ]);\n  const openModal = () => setModalIsOpen(true);\n  const closeModal = () => setModalIsOpen(false);\n  const handleEventInput = e => {\n    const { name, value } = e.target;\n    setNewEvent({ ...newEvent, [name]: value });\n  };\n  const addNewEvent = () => {\n    const colorMap = {\n      success: '#36C76C',\n      danger: '#FF6692',\n      primary: '#3D33FF',\n      warning: '#FFD648',\n    };\n    setEvents([\n      ...events,\n      {\n        ...newEvent,\n        backgroundColor: colorMap[newEvent.color],\n        textColor: '#FFFFFF',\n      },\n    ]);\n    setNewEvent({ title: '', start: '', end: '', color: 'success' });\n    closeModal();\n  };\n  const renderEventContent = eventInfo => {\n    return (\n      <div\n        style={{\n          backgroundColor: eventInfo.backgroundColor,\n          color: eventInfo.event.extendedProps.textColor,\n          padding: '2px 4px',\n          borderRadius: '4px',\n        }}\n      >\n        <b>{eventInfo.timeText}</b>\n        <i>{eventInfo.event.title}</i>\n        {console.log(eventInfo)}\n      </div>\n    );\n  };\n  return (\n    <div className='p-4 bg1-bg1 text-light rounded-lg'>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin]}\n        initialView='dayGridMonth'\n        headerToolbar={{\n          left: 'prev,next addEventButton',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay',\n        }}\n        customButtons={{\n          addEventButton: {\n            text: 'Add Event',\n            click: openModal,\n          },\n        }}\n        events={events}\n        eventContent={renderEventContent} // Custom event rendering\n      />\n      <EventModal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        event={newEvent}\n        handleEventInput={handleEventInput}\n        addNewEvent={addNewEvent}\n      />\n    </div>\n  );\n};\nexport default MyCalendar;\n","import React from 'react';\nimport MyCalendar from './Calendar/MyCalendar';\n\nconst Index = () => {\n  return (\n    <div>\n      <h1 className='text-left text-white text-3xl mb-6'>Event Management</h1>\n      <div className='bg-secondary__fill p-4 rounded-xl border border-gray-700 w-auto h-auto'>\n        <MyCalendar />\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n"],"names":["Modal","_ref","isOpen","onRequestClose","event","handleEventInput","addNewEvent","_jsxs","contentLabel","className","overlayClassName","children","_jsx","type","name","value","title","onChange","checked","color","start","end","onClick","MyCalendar","modalIsOpen","setModalIsOpen","useState","newEvent","setNewEvent","events","setEvents","backgroundColor","textColor","closeModal","FullCalendar","plugins","dayGridPlugin","timeGridPlugin","initialView","headerToolbar","left","center","right","customButtons","addEventButton","text","click","openModal","eventContent","eventInfo","style","extendedProps","padding","borderRadius","timeText","console","log","EventModal","e","target","success","danger","primary","warning","Index"],"sourceRoot":""}